[{"C:\\Users\\AIDA\\trello-test-react-redax\\src\\index.js":"1","C:\\Users\\AIDA\\trello-test-react-redax\\src\\App.js":"2","C:\\Users\\AIDA\\trello-test-react-redax\\src\\reportWebVitals.js":"3","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\index.js":"4","C:\\Users\\AIDA\\trello-test-react-redax\\src\\pages\\BoardTrello\\BoardTrello.js":"5","C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\List\\List.js":"6","C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\Card\\Card.js":"7","C:\\Users\\AIDA\\trello-test-react-redax\\src\\pages\\BoardTrello\\Home.js":"8","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\reducer.js":"9","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\boardsSlice.js":"10","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\listsSlice.js":"11","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\cardsSlice.js":"12","C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\AddButton\\CommonAddButton.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":652,"mtime":1608157688425,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":492,"mtime":1608157678703,"results":"18","hashOfConfig":"15"},{"size":3355,"mtime":1608157487330,"results":"19","hashOfConfig":"15"},{"size":3537,"mtime":1608157978643,"results":"20","hashOfConfig":"15"},{"size":1279,"mtime":1608078785085,"results":"21","hashOfConfig":"15"},{"size":4887,"mtime":1608161314798,"results":"22","hashOfConfig":"15"},{"size":419,"mtime":1608062521120,"results":"23","hashOfConfig":"15"},{"size":623,"mtime":1608160594154,"results":"24","hashOfConfig":"15"},{"size":1559,"mtime":1608158779114,"results":"25","hashOfConfig":"15"},{"size":1753,"mtime":1608158019789,"results":"26","hashOfConfig":"15"},{"size":4316,"mtime":1608078752895,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"bko7aa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\AIDA\\trello-test-react-redax\\src\\index.js",[],["57","58"],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\App.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\reportWebVitals.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\index.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\pages\\BoardTrello\\BoardTrello.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\List\\List.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\Card\\Card.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\pages\\BoardTrello\\Home.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\reducer.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\boardsSlice.js",[],"C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\listsSlice.js",["59","60","61"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport concat from 'lodash/concat';\r\nimport filter from 'lodash/filter';\r\n\r\nconst slice = createSlice({\r\n  name: 'lists',\r\n  initialState: [],\r\n  reducers: {\r\n    addList(state, action) {\r\n      const { boardId, id, title } = action.payload;\r\n      return concat(state, { boardId, id, title });\r\n    },\r\n    deleteList(state, action) {\r\n      const newLists = state.filter(list => list.id !== action.payload); \r\n      return newLists;\r\n    },\r\n    getList(state,action) {\r\n      const boardId = action.payload;\r\n      return state.filter(list => list.boardId === boardId);\r\n    },\r\n    deleteBoardsList(state,action) {\r\n      const boardId = action.payload;\r\n      return filter(state, (item) => item.boardId !== boardId);;\r\n    },\r\n    sortAfterDragAndDrop(state, action) {\r\n      const {\r\n        droppableIdStart, \r\n        droppableIdEnd, \r\n        droppableIndexStart, \r\n        droppableIndexEnd, \r\n        droppableId, \r\n        type,\r\n       } = action.payload;\r\n       const newState= [...state];\r\n       if(type === 'list') {\r\n         const list = newState.splice(droppableIndexStart, 1);\r\n         newState.splice(droppableIndexEnd, 0, ...list);\r\n         return newState;\r\n       }\r\n       return newState;\r\n    }\r\n  }\r\n})\r\n\r\nexport const listsName = slice.name;\r\nexport const listsReducer = slice.reducer;\r\nexport const { addList, \r\n               deleteList, \r\n               getList, \r\n               sortAfterDragAndDrop, \r\n               deleteBoardsList, \r\n              } = slice.actions;\r\n","C:\\Users\\AIDA\\trello-test-react-redax\\src\\store\\slice\\cardsSlice.js",["62","63"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { concat } from 'lodash';\r\n\r\n\r\nconst slice = createSlice({\r\n  name: 'cards',\r\n  initialState: [],\r\n  reducers: {\r\n    addCard(state, action) {\r\n      const { listId, id, title } = action.payload;\r\n      return concat(state, { listId ,id, title })\r\n    },\r\n    deleteCard(state, action) {\r\n      const newLists = state.filter(card => card.id !== action.payload); \r\n      return newLists;\r\n    },\r\n    getCard(state,action) {\r\n      const listId = action.payload;\r\n      return state.filter(card => card.listId === listId);\r\n    },\r\n    deleteListCards(state,action) {\r\n      const listId = action.payload;\r\n      return state.filter(card => card.listId !== listId);\r\n    },\r\n    sortAfterDragAndDropCard(state, action) {\r\n      const {\r\n        droppableIdStart, \r\n        droppableIdEnd, \r\n        droppableIndexStart, \r\n        droppableIndexEnd, \r\n        droppableId, \r\n        type,\r\n       } = action.payload;\r\n      if (droppableIdStart === droppableIdEnd) {\r\n         state.find(card => droppableIdStart.slice(4) === card.listId);\r\n         const card = state.splice(droppableIndexStart, 1);\r\n         state.splice(droppableIndexEnd, 0, ...card);\r\n         return state;\r\n       } \r\n       if (droppableIdStart !== droppableIdEnd) {\r\n        const list = state.find(card => droppableIdStart.slice(4) ===card.listId);\t\r\n        list.listId = droppableIdEnd.slice(4);\r\n      }  \r\n       return state;\r\n    }\r\n  }\r\n})\r\n\r\nexport const cardsName = slice.name;\r\nexport const cardsReducer = slice.reducer;\r\nexport const { addCard,\r\n               deleteCard, \r\n               getCard, \r\n               sortAfterDragAndDropCard, \r\n               deleteListCards \r\n              } = slice.actions;\r\n","C:\\Users\\AIDA\\trello-test-react-redax\\src\\components\\AddButton\\CommonAddButton.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":27,"column":9,"nodeType":"70","messageId":"71","endLine":27,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":28,"column":9,"nodeType":"70","messageId":"71","endLine":28,"endColumn":23},{"ruleId":"68","severity":1,"message":"73","line":31,"column":9,"nodeType":"70","messageId":"71","endLine":31,"endColumn":20},{"ruleId":"68","severity":1,"message":"73","line":31,"column":9,"nodeType":"70","messageId":"71","endLine":31,"endColumn":20},{"ruleId":"68","severity":1,"message":"74","line":32,"column":9,"nodeType":"70","messageId":"71","endLine":32,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'droppableIdStart' is assigned a value but never used.","Identifier","unusedVar","'droppableIdEnd' is assigned a value but never used.","'droppableId' is assigned a value but never used.","'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]